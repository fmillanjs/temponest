# ============================================
# TempoNest Local Development Environment
# ============================================
#
# Value Propositions:
# - Complete local development environment in one command
# - Includes all infrastructure services (DB, Redis, Analytics, Email)
# - Hot reload for rapid development
# - Observability with Plausible Analytics
# - Email testing with MailHog
# - S3-compatible storage with MinIO
#
# Usage:
#   pnpm docker:dev       - Start all services
#   pnpm docker:dev:down  - Stop all services
#   pnpm docker:dev:clean - Stop and remove volumes (clean slate)
# ============================================

version: '3.8'

services:
  # ============================================
  # PostgreSQL - Main Database
  # ============================================
  postgres:
    image: postgres:16-alpine
    container_name: temponest-postgres
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: temponest
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - temponest-network

  # ============================================
  # Redis - Cache & Job Queue
  # ============================================
  redis:
    image: redis:7-alpine
    container_name: temponest-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - temponest-network

  # ============================================
  # Plausible Analytics - Self-Hosted Analytics
  # ============================================

  # Plausible PostgreSQL Database
  plausible-db:
    image: postgres:16-alpine
    container_name: temponest-plausible-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: plausible
      POSTGRES_PASSWORD: plausible
      POSTGRES_DB: plausible
    volumes:
      - plausible-db-data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U plausible']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - temponest-network

  # Plausible ClickHouse Database (for events)
  plausible-events:
    image: clickhouse/clickhouse-server:23.11.2.11-alpine
    container_name: temponest-plausible-events
    restart: unless-stopped
    volumes:
      - plausible-events-data:/var/lib/clickhouse
      - ./scripts/clickhouse-config.xml:/etc/clickhouse-server/config.d/logging.xml:ro
      - ./scripts/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/logging.xml:ro
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'localhost:8123/ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - temponest-network

  # Plausible Analytics App
  plausible:
    image: plausible/analytics:v2.0
    container_name: temponest-plausible
    restart: unless-stopped
    command: sh -c "sleep 10 && /entrypoint.sh db createdb && /entrypoint.sh db migrate && /entrypoint.sh run"
    depends_on:
      plausible-db:
        condition: service_healthy
      plausible-events:
        condition: service_healthy
    ports:
      - '8000:8000'
    environment:
      BASE_URL: http://localhost:8000
      SECRET_KEY_BASE: 'replace-me-with-a-real-secret-in-production-min-64-chars-long-bXFhYnNkZmphc2RmanNka2Zqc2RrbGZqc2tsamRmbGtzamRmbGtzamRsa2ZqcyE='
      DATABASE_URL: postgres://plausible:plausible@plausible-db:5432/plausible
      CLICKHOUSE_DATABASE_URL: http://plausible-events:8123/plausible
      DISABLE_REGISTRATION: 'invite_only'
      MAILER_EMAIL: admin@temponest.local
      SMTP_HOST_ADDR: mailhog
      SMTP_HOST_PORT: 1025
      SMTP_USER_NAME: ''
      SMTP_USER_PWD: ''
      SMTP_HOST_SSL_ENABLED: 'false'
      SMTP_RETRIES: 2
    networks:
      - temponest-network

  # ============================================
  # MailHog - Email Testing
  # ============================================
  mailhog:
    image: mailhog/mailhog:latest
    container_name: temponest-mailhog
    restart: unless-stopped
    ports:
      - '1025:1025' # SMTP
      - '8025:8025' # Web UI
    networks:
      - temponest-network

  # ============================================
  # MinIO - S3-Compatible Object Storage
  # ============================================
  minio:
    image: minio/minio:latest
    container_name: temponest-minio
    restart: unless-stopped
    ports:
      - '9000:9000' # API
      - '9001:9001' # Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_BROWSER_REDIRECT_URL: http://localhost:9001
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - temponest-network

  # ============================================
  # MinIO Client - Create default bucket
  # ============================================
  minio-create-bucket:
    image: minio/mc:latest
    container_name: temponest-minio-setup
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb myminio/temponest || true;
      /usr/bin/mc anonymous set public myminio/temponest;
      exit 0;
      "
    networks:
      - temponest-network

# ============================================
# Volumes
# ============================================
volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  plausible-db-data:
    driver: local
  plausible-events-data:
    driver: local
  minio-data:
    driver: local

# ============================================
# Networks
# ============================================
networks:
  temponest-network:
    driver: bridge
